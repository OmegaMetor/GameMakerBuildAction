name: "Build GameMaker Project"
description: "Build a GameMaker project for the selected platform, with the selected options."
branding:
  icon: "code"
  color: "blue"
author: "OmegaMetor"
inputs:
  runtime-version:
    description: "The exact runtime version to build the game with, like 2.3.4.443"
    required: true
  platform:
    description: "The platform to build for. Examples: linux, mac, windows, html5."
    required: true
  game-yyp-path:
    description: "The path to the yyp file for the game that should be built."
    required: true
  build-yyc:
    description: "Whether to use yyc to build the game. Defaults to false. If false, uses vm."
    required: false
    default: false
  out-file:
    description: "Path to output the file to."
    required: true
    default: "Game.zip"
  access-key:
    description: "The Access Key to get licenses from to build the game. (This should be a secret)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Build Game
      run: |
        echo Key is ${{ inputs.access-key }}
        if [ "$RUNNER_OS" == "Linux" ]; then
            igor_link=https://gms.yoyogames.com/igor_linux-x64.zip
            igor_executable=${{ github.action_path }}/igor/Igor
        elif [ "$RUNNER_OS" == "Windows" ]; then
            igor_link=https://gms.yoyogames.com/igor_win-x64.zip
            igor_executable=${{ github.action_path }}/igor/Igor.exe
        elif [ "$RUNNER_OS" == "macOs" ]; then
            igor_link=https://gms.yoyogames.com/igor_osx.11.0-arm64.zip
            igor_executable=${{ github.action_path }}/igor/Igor
        else
            echo "$RUNNER_OS not supported"
            exit 1
        fi

        echo Downloading Igor

        mkdir ${{ github.action_path }}/igor
        curl -o ${{ github.action_path }}/igor/igor.zip $igor_link
        unzip ${{ github.action_path }}/igor/igor.zip -d ${{ github.action_path }}/igor

        echo Getting license
        $igor_executable runtime FetchLicense -ak ${{ inputs.access-key }} -of ${{ github.action_path }}/license.plist
        echo Downloading runtime...
        mkdir ${{ github.action_path }}
        cd ${{ github.action_path }}
        $igor_executable runtime Install ${{ inputs.runtime-version }} -lf ${{ github.action_path }}/license.plist
        cd -
        echo Build project
        mkdir ${{ github.action_path }}/cache
        mkdir ${{ github.action_path }}/temp
        mkdir ${{ github.action_path }}/out
        
        $igor_executable /rp ${{ github.action_path }}/runtime-${{ inputs.runtime-version }} /lf ${{ github.action_path }}/license.plist /cache ${{ github.action_path }}/cache /temp ${{ github.action_path }}/temp /project ${{ inputs.game-yyp-path }} /of ${{ github.action_path }}/out /tf ${{ inputs.out-file }} ${{ inputs.platform }} Package
      shell: bash
